name: CI
on:
  schedule:
    - cron: "*/5 * * * *"
  push:
    branches: [ master ]
  pull_request:
    branches:
  workflow_dispatch:

jobs:
  build:
    env:
      PY_COLORS: "1"
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.13"]

    runs-on: ${{ matrix.os }}

    steps:
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install kick-api
      run: npm install kick-api

    - name: Write kick-status.js
      run: |
        cat <<'EOF' > kick-status.js
        const KickAPI = require('kick-api');
        const username = process.argv[2] || "shortypie";
        KickAPI.channel(username)
          .then(data => {
            const isLive = !!data.livestream;
            console.log('IS_ONLINE=' + isLive);
            require('fs').appendFileSync(process.env.GITHUB_OUTPUT, `online=${isLive}\n`);
            process.exit(0);
          })
          .catch(err => {
            console.error('IS_ONLINE=false');
            require('fs').appendFileSync(process.env.GITHUB_OUTPUT, `online=false\n`);
            process.exit(0);
          });
        EOF

    - name: Check if Kick streamer is online (using kick-api)
      id: kick_status
      run: node kick-status.js shortypie

    - name: Exit if streamer is not live
      if: steps.kick_status.outputs.online != 'true'
      run: echo "Streamer is not live. Exiting workflow."

    - uses: actions/checkout@v4
      if: steps.kick_status.outputs.online == 'true'

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
      if: steps.kick_status.outputs.online == 'true'

    - name: Set Locale
      run: |
        sudo apt-get install tzdata locales -y && sudo locale-gen en_US.UTF-8
        sudo localectl set-locale LANG="en_US.UTF-8"
        export LANG="en_US.UTF-8"
        sudo update-locale
        locale -a
        locale
        locale -c -k LC_NUMERIC
        localectl status
      if: steps.kick_status.outputs.online == 'true'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade pip
        pip install --upgrade wheel
        pip install --upgrade seleniumbase
        pip install --upgrade pyautogui
        pip install --upgrade pymongo
        pip install --upgrade python-xlib
      if: steps.kick_status.outputs.online == 'true'

    - name: Lint with flake8
      run: |
        pip install flake8
        # Stop the build if there are flake8 issues
        # flake8 . --count --show-source --statistics --exclude=temp
      if: steps.kick_status.outputs.online == 'true'

    - name: Install Chrome
      if: steps.kick_status.outputs.online == 'true' && matrix.os == 'ubuntu-20.04'
      run: |
        sudo apt install google-chrome-stable

    - name: Check the console scripts interface
      run: |
        seleniumbase
        sbase
      if: steps.kick_status.outputs.online == 'true'

    - name: Install chromedriver
      run: |
        seleniumbase install chromedriver
      if: steps.kick_status.outputs.online == 'true'

    - name: Install Cloudflare WARP
      run: |
        sudo apt update
        sudo apt install -y curl
        curl https://pkg.cloudflareclient.com/pubkey.gpg | sudo gpg --dearmor -o /usr/share/keyrings/cloudflare-warp-archive-keyring.gpg
        echo "deb [signed-by=/usr/share/keyrings/cloudflare-warp-archive-keyring.gpg] https://pkg.cloudflareclient.com/ $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/cloudflare-client.list
        sudo apt update
        sudo apt install -y cloudflare-warp
        sudo warp-cli --accept-tos registration new
        sudo warp-cli --accept-tos connect
        sleep 5
        sudo warp-cli --accept-tos status
      if: steps.kick_status.outputs.online == 'true'

    - name: Run python plugin.py --debug
      run: |
        python plugin.py --debug --chrome --xvfb --screenshot
      if: steps.kick_status.outputs.online == 'true'

    - name: Upload screenshots
      uses: actions/upload-artifact@v4
      with:
        name: seleniumbase-screenshots
        path: |
          ./latest_logs/
      if: steps.kick_status.outputs.online == 'true'
